# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# working temp aliases
alias odin="cd ~/programming/web/odin"

# my aliases
alias python="python3"
alias r="ranger"
alias bat="batcat"

# nvim
alias v="nvim"
alias nvc="cd ~/.config/nvim"
alias nvcw="cd ~/.config/nvim/vimwiki/docs"
alias nvi="chezmoi edit ~/.config/nvim/init.vim"
alias nvp="cd ~/.config/nvim/plugged"
alias wiki="nvim ~/.config/nvim/vimwiki/docs/index.md"

# Kitty
alias icat="kitty +kitten icat"
alias kt.='nohup kitty --directory "$(pwd)" >/dev/null 2>&1 & disown'
alias ktc="cd ~/.config/kitty"
alias kti="chezmoi edit ~/.config/kitty/kitty.conf"

# qtile
alias qtc="cd ~/.config/qtile"
alias qti="chezmoi edit ~/.config/qtile/config.py"
alias qtr="pkill -SIGUSR1 qtile"

# chezmoi
alias cmd="chezmoi cd"
alias cme="chezmoi edit"
alias cma="chezmoi -v apply"

# git aliases
alias gs="git status"
alias ga="git add"
alias gc="git commit"
alias gcm="git commit -m "
alias gp="git push"
alias gd="git diff"
alias gg="git graph"

# bashrc
alias bsi="chezmoi edit ~/.bashrc"
alias bss="source ~/.bashrc"

# cmd aliases
alias ipadress="echo $(ifconfig | grep broadcast | awk '{print $2}')"
alias mv="mv -i" # ask if override
alias cddl="cd ~/Downloads"
alias ..="cd .."
alias rm="rm -i"

# ls aliases
alias ll='ls -alF'
alias la='ls -lA'
alias l='ls -CF'

alias npmt="npm test"

# set default editor
export VISUAL=nvim;
export EDITOR=nvim;

# enable auto cd
shopt -s autocd

PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/programming/git_clone/eww/target/release:$PATH"

# set vi mode and enable ctrl l in insert mode
# set -o vi
# bind -m vi-command 'Control-l: clear-screen'
# bind -m vi-insert 'Control-l: clear-screen'



# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'


# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# change color of dir when ls
# set dir to purple
LS_COLORS=$LS_COLORS:'di=0;35:' 
# set r only dir in red
LS_COLORS=$LS_COLORS:'ow=0;35:tw=0;35:' 
export LS_COLORS


show_git_branch() {
    local branch_name=$(git symbolic-ref --quiet --short HEAD 2>/dev/null)
    if [ -n "$branch_name" ]; then
        echo ": $branch_name"
    fi
}

# custom prompt line (override lines above)
PS1="\[\e[0;96m\][\$(if [ \$? = 0 ]; then echo '\[\e[0;1;96m\]茶雨\[\e[0m\]'; else echo '\[\e[0;1;5;31m\]茶雨\[\e[0m\]'; fi)\[\e[0;96m\]] \[\e[0;32m\]\u\[\e[0m\]:\[\e[0;36m\]\W\[\e[0m\]\$\[\e[0m\] "
PS2="\[\e[0;1;95m\]> \[\e[0m\]"

# rust env
. "$HOME/.cargo/env"

# nvm env (auto generated)
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# neofetch
